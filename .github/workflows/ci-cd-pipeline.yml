name: CI/CD Deployment Pipeline

on:
  workflow_dispatch:  # Trigger manual

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f package.json ]; then
            npm install
          fi
          
      - name: Build
        shell: bash
        run: |
          if [ -f src/index.js ]; then
            npx --yes @vercel/ncc build src/index.js --license licenses.txt || echo "Build skipped"
          fi
          
      - name: Create artifact
        run: zip -r build.zip . -x ".git/*" "node_modules/*" ".github/*"
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
          retention-days: 5

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      
      - name: Release to Staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "ðŸš€ Deploying to STAGING with tag: $TAG"
          gh release delete "$TAG" --yes 2>/dev/null || true
          gh release create "$TAG" build.zip \
            --notes "$NOTE" \
            --prerelease \
            --repo ${{ github.repository }}

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      
      - name: Release to Production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "âœ… Deploying to PRODUCTION with tag: $TAG"
          gh release delete "$TAG" --yes 2>/dev/null || true
          gh release create "$TAG" build.zip \
            --notes "$NOTE" \
            --latest \
            --repo ${{ github.repository }}
